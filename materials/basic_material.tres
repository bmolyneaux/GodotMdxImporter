[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="VisualShaderNodeTextureUniform" id=3]
uniform_name = "Albedo"

[sub_resource type="VisualShaderNodeScalarConstant" id=4]
constant = 1.0

[sub_resource type="VisualShader" id=2]
code = "shader_type spatial;
render_mode cull_front, specular_schlick_ggx, async_visible;

uniform sampler2D Albedo;



void vertex() {
// Output:0

}

void fragment() {
// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(Albedo, UV.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Scalar:3
	float n_out3p0 = 1.000000;

// Output:0
	ALBEDO = n_out2p0;
	ROUGHNESS = n_out3p0;

}

void light() {
// Output:0

}
"
modes/cull = 1
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( 100, 60 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( 120, 260 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 0, 0, 3 )

[resource]
shader = SubResource( 2 )
